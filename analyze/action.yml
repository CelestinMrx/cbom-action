name: PQC Analyze Action
description: Run the Post Quantum Research CodeQL queries and create a CBOM
inputs:
  repositoryNameWithOwner:
    description: The repository to analyze
    required: false
    default: ${{ github.repository }}
  language:
    description: The language to analyze
    required: true
  pqc-pack-read-token:
    description: Access token for PQC query pack read - not needed when public
    required: true
runs:
  using: composite
  steps:
    - name: Set up env
      shell: bash -ex {0}
      run: |
        IFS=/ read -r REPO_OWNER REPO_NAME <<< ${{ inputs.repositoryNameWithOwner }}
        echo "REPO_OWNER=${REPO_OWNER}" >> "$GITHUB_ENV"
        echo "REPO_NAME=${REPO_NAME}" >> "$GITHUB_ENV"
        echo "GH_TOKEN=${{ github.token }}" >> "$GITHUB_ENV"
        echo "CODEQL_EXTRACTOR_JAVA_OPTION_BUILDLESS=true" >> "$GITHUB_ENV"
        echo "CODEQL_EXTRACTOR_JAVA_OPTION_BUILDLESS_CLASSPATH_FROM_BUILD_FILES=true" >> "$GITHUB_ENV"
        echo "CODEQL_DB_PATH=${{ github.workspace }}" >> "$GITHUB_ENV"
        echo "CODEQL_DB_ZIP=codeql-db.zip" >> "$GITHUB_ENV"
    - name: Find or install CodeQL
      shell: bash -x {0}
      run: |
        VERSION="$(find "${{ runner.tool_cache }}/CodeQL/" -maxdepth 1 -mindepth 1 -type d -print \
          | sort \
          | tail -n 1 \
          | tr -d '\n')"
        if [ $? -eq 0 ]
        then
          echo "$VERSION/x64/codeql" >> $GITHUB_PATH
        else
          gh extensions install github/gh-codeql
          gh codeql download
          gh codeql install-stub
        fi       
    - name: Download CodeQL DB
      id: download-codeql-db
      shell: bash -ex {0}
      continue-on-error: true
      run: |
        ! curl -f -L -o ${CODEQL_DB_ZIP} \
          -H "Accept: application/zip" \
          -H "Authorization: Bearer ${{ github.token }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/${{ inputs.repositoryNameWithOwner }}/code-scanning/codeql/databases/${{ inputs.language }}"
        if [ -f ${CODEQL_DB_ZIP} ]
        then
          codeql database unbundle ${CODEQL_DB_ZIP} --target=${CODEQL_DB_PATH} --name=codeql-db
          codeql database upgrade ${CODEQL_DB_PATH}/codeql-db || true
          echo "CODEQL_DB_DOWNLOADED=true" >> "$GITHUB_ENV"
        fi
    - name: Checkout
      if: env.CODEQL_DB_DOWNLOADED != 'true'
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repositoryNameWithOwner }}
        path: ${{ inputs.repositoryNameWithOwner }}
    - name: Create CodeQL DB
      if: env.CODEQL_DB_DOWNLOADED != 'true'
      shell: bash -ex {0}
      run: |
        if ! [ -d ${CODEQL_DB_PATH}/codeql-db ]
        then
          mkdir -p ${CODEQL_DB_PATH}/codeql-db
          cd ${{ github.workspace }}/${{ inputs.repositoryNameWithOwner }}
          codeql database create --language ${{ inputs.language }} ${CODEQL_DB_PATH}/codeql-db
        fi
    - name: CodeQL analyze
      shell: bash -ex {0}
      run: |
        GITHUB_TOKEN=${{ inputs.pqc-pack-read-token }} codeql pack download pre-quantum-research/${{ inputs.language }}-cryptography 
        SARIF_DIR_PATH=${{ github.workspace }}/pqc-results/${{ inputs.repositoryNameWithOwner }}
        mkdir -p ${SARIF_DIR_PATH}
        codeql database analyze ${CODEQL_DB_PATH}/codeql-db \
          pre-quantum-research/${{ inputs.language }}-cryptography \
          --output=${SARIF_DIR_PATH}/${{ inputs.language }}.sarif \
          --format=sarifv2.1.0 --sarif-category="/pqc:${{ inputs.language }}" \
          --sarif-add-query-help --sarif-add-snippets \
          --timeout=300
    - name: Archive results
      uses: actions/upload-artifact@v3
      with:
        name: pqc-results
        path: ${{ github.workspace }}/pqc-results

