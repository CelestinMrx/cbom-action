name: Run PQC

on:
  workflow_dispatch:
  push:
    paths:
      - "**/action.yml"
      - ".github/workflows/pqc.yml"

permissions:
  actions: read
  contents: read
  security-events: write

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.run.outputs.repos }}}
    steps:
      - run: |
          set -ex
          REPOS=$(
            gh api graphql \
            -H 'Accept: application/vnd.github.hawkgirl-preview+json' \
            -f query='
                query getDependencyGraph {
                  repository(owner: "ctcampbell", name: "webgoat") {
                    name
                    dependencyGraphManifests {
                      totalCount
                      edges {
                        node {
                          filename
                          dependencies {
                            edges {
                              node {
                                packageName
                                packageManager
                                requirements
                                repository {
                                  nameWithOwner
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ' \
            | jq -r \
                '[.data.repository.dependencyGraphManifests.edges[].node | 
                select(.filename | contains(".github/workflows") | not) | 
                .dependencies.edges[].node.repository | select(.nameWithOwner != null) | .nameWithOwner] | 
                unique'
          )
          echo "REPOS='${REPOS}'" >> "$GITHUB_OUTPUT"
        id: run
        shell: bash
  run-pqc-action:
    runs-on: ubuntu-latest
    needs: build-matrix
    strategy:
      fail-fast: false
      matrix:
        repository: ${{ fromJSON(needs.build-matrix.outputs.repos) }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./analyze
        with:
          repository: ${{ matrix.repository }}
          language: python
          pqc-pack-read-token: ${{ secrets.PQC_FOR_ACTIONS_PACK_READ }}
